{"version":3,"file":"static/js/247.c0a93d25.chunk.js","mappings":"8LAGaA,GAAMC,EAAAA,EAAAA,GAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,2FCiCF,UArCa,WACX,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAAA,sBAA0BH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAaM,EAAKC,KAAtB,GAC7C,GAAE,CAACN,KAGF,yBACGF,GAAaA,EAAUS,QACtB,SAAC,IAAD,CAAKC,GAAG,KAAKC,QAAQ,OAAOC,cAAc,SAASC,QAAS,GAAIC,GAAI,GAApE,SACGd,EAAUe,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC/BC,EAAaD,EAAY,yCACOA,GAClC,oDAEJ,OACE,yBACE,UAAC,IAAD,CAAKR,QAAQ,OAAOE,QAAS,GAA7B,WACE,gBAAKQ,IAAKD,EAAYE,IAAG,UAAKJ,GAAQK,MAAO,OAC7C,4BACE,uBAAIL,KACJ,uCAAeD,YALZD,EAUZ,OAGH,qCAIP,C,2ECtCKQ,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,6GAERD,IAAAA,IAAA,sCAAyCD,IAFjC,cAEzBG,EAFyB,yBAGxBA,EAASpB,KAAKqB,SAHU,gCAK/BC,QAAQC,MAAR,MAL+B,yDAAH,qDASnBC,EAAkB,mCAAG,WAAMC,GAAN,gGAEPP,IAAAA,IAAA,gCACID,EADJ,kBACqBQ,IAHd,cAExBL,EAFwB,yBAKvBA,EAASpB,KAAKqB,SALS,gCAO9BC,QAAQC,MAAR,MAP8B,yDAAH,sDAWlBG,EAAc,mCAAG,WAAMjB,GAAN,gGAEHS,IAAAA,IAAA,iBAAoBT,EAApB,oBAAkCQ,IAF/B,cAEpBG,EAFoB,yBAGnBA,EAASpB,MAHU,gCAK1BsB,QAAQC,MAAM,KAAMI,SALM,yDAAH,sDASdC,EAAqB,mCAAG,WAAMnB,GAAN,gGAEVS,IAAAA,IAAA,iBAAoBT,EAApB,4BAA0CQ,IAFhC,cAE3BG,EAF2B,yBAG1BA,EAASpB,MAHiB,gCAKjCsB,QAAQC,MAAR,MALiC,yDAAH,sDASrBM,EAAqB,mCAAG,WAAMpB,GAAN,gGAEVS,IAAAA,IAAA,iBAAoBT,EAApB,4BAA0CQ,IAFhC,cAE3BG,EAF2B,yBAG1BA,EAASpB,MAHiB,gCAKjCsB,QAAQC,MAAR,MALiC,yDAAH,sDAS5BzB,EAAM,CACVqB,oBAAAA,EACAK,mBAAAA,EACAE,eAAAA,EACAE,sBAAAA,EACAC,sBAAAA,GAGF,M","sources":["components/Box.js","components/Cast/Cast.jsx","services/movies-api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { typography, space, color, layout, flexbox, grid } from 'styled-system';\n\nexport const Box = styled('div')(\n  typography,\n  space,\n  color,\n  layout,\n  flexbox,\n  grid\n);\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/movies-api';\nimport { Box } from 'components/Box';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    api.fetchMovieCreditsById(movieId).then(data => setMovieCast(data.cast));\n  }, [movieId]);\n\n  return (\n    <div>\n      {movieCast && movieCast.length ? (\n        <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" gridGap={15} mt={15}>\n          {movieCast.map(({ id, character, name, profile_path }) => {\n            const actorPhoto = profile_path\n              ? `https://image.tmdb.org/t/p/w500${profile_path}`\n              : 'https://via.placeholder.com/395x574?text=No+photo';\n\n            return (\n              <li key={id}>\n                <Box display=\"flex\" gridGap={10}>\n                  <img src={actorPhoto} alt={`${name}`} width={150} />\n                  <div>\n                    <p>{name}</p>\n                    <p>Character: {character}</p>\n                  </div>\n                </Box>\n              </li>\n            );\n          })}\n        </Box>\n      ) : (\n        <h2>No data</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '48c8290358fa5316a044ddee2fc9cc6f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieById = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieCreditsById = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieReviewsById = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesByQuery,\n  fetchMovieById,\n  fetchMovieCreditsById,\n  fetchMovieReviewsById,\n};\n\nexport default api;\n"],"names":["Box","styled","typography","space","color","layout","flexbox","grid","useState","movieCast","setMovieCast","movieId","useParams","useEffect","api","then","data","cast","length","as","display","flexDirection","gridGap","mt","map","id","character","name","profile_path","actorPhoto","src","alt","width","API_KEY","axios","fetchTrendingMovies","response","results","console","error","fetchMoviesByQuery","query","fetchMovieById","message","fetchMovieCreditsById","fetchMovieReviewsById"],"sourceRoot":""}