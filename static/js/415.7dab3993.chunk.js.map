{"version":3,"file":"static/js/415.7dab3993.chunk.js","mappings":"8LAGaA,GAAMC,EAAAA,EAAAA,GAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,qGC2CF,UA/Ca,WACX,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAAA,sBAA0BC,MAAK,SAAAC,GAAM,OAAIN,EAAgBM,EAApB,GACtC,GAAE,KAGD,4BACE,4CACA,SAAC,IAAD,CAAKC,GAAG,KAAKC,QAAQ,OAAOC,cAAc,SAASC,QAAS,GAAIC,GAAI,GAApE,SACGZ,GACCA,EAAaa,KAAI,YAA+C,IAA5CC,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACpCC,EAASF,EAAW,yCACYA,GAClC,qDAEEG,EAAUF,EACZA,EAAaG,MAAM,EAAG,GACtB,kBAEJ,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMrB,GAA1C,UACE,UAAC,IAAD,CAAKO,QAAQ,OAAOE,QAAS,GAA7B,WACE,gBACEa,IAAKN,EACLO,IAAG,0BAAqBV,GACxBW,QAAQ,OACR,UAASZ,EACTa,MAAO,OAET,4BACE,wBAAKZ,KACL,uBAAII,aAZHL,EAkBZ,QAIV,C,2EChDKc,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,6GAERD,IAAAA,IAAA,sCAAyCD,IAFjC,cAEzBG,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,gCAK/BC,QAAQC,MAAR,MAL+B,yDAAH,qDASnBC,EAAkB,mCAAG,WAAMC,GAAN,gGAEPR,IAAAA,IAAA,gCACID,EADJ,kBACqBS,IAHd,cAExBN,EAFwB,yBAKvBA,EAASC,KAAKC,SALS,gCAO9BC,QAAQC,MAAR,MAP8B,yDAAH,sDAWlBG,EAAc,mCAAG,WAAMxB,GAAN,gGAEHe,IAAAA,IAAA,iBAAoBf,EAApB,oBAAkCc,IAF/B,cAEpBG,EAFoB,yBAGnBA,EAASC,MAHU,gCAK1BE,QAAQC,MAAM,KAAMI,SALM,yDAAH,sDASdC,EAAqB,mCAAG,WAAM1B,GAAN,gGAEVe,IAAAA,IAAA,iBAAoBf,EAApB,4BAA0Cc,IAFhC,cAE3BG,EAF2B,yBAG1BA,EAASC,MAHiB,gCAKjCE,QAAQC,MAAR,MALiC,yDAAH,sDASrBM,EAAqB,mCAAG,WAAM3B,GAAN,gGAEVe,IAAAA,IAAA,iBAAoBf,EAApB,4BAA0Cc,IAFhC,cAE3BG,EAF2B,yBAG1BA,EAASC,MAHiB,gCAKjCE,QAAQC,MAAR,MALiC,yDAAH,sDAS5B9B,EAAM,CACVyB,oBAAAA,EACAM,mBAAAA,EACAE,eAAAA,EACAE,sBAAAA,EACAC,sBAAAA,GAGF,M","sources":["components/Box.js","pages/Home.jsx","services/movies-api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { typography, space, color, layout, flexbox, grid } from 'styled-system';\n\nexport const Box = styled('div')(\n  typography,\n  space,\n  color,\n  layout,\n  flexbox,\n  grid\n);\n","import { Box } from 'components/Box';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport api from '../services/movies-api';\n\nconst Home = () => {\n  const [trendingList, setTrendingList] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    api.fetchTrendingMovies().then(movies => setTrendingList(movies));\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" gridGap={15} mt={15}>\n        {trendingList &&\n          trendingList.map(({ id, title, poster_path, release_date }) => {\n            const imgUrl = poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : 'https://via.placeholder.com/395x574?text=No+poster';\n\n            const release = release_date\n              ? release_date.slice(0, 4)\n              : 'No release date';\n\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <Box display=\"flex\" gridGap={10}>\n                    <img\n                      src={imgUrl}\n                      alt={`Movie poster of ${title}`}\n                      loading=\"lazy\"\n                      data-id={id}\n                      width={200}\n                    />\n                    <div>\n                      <h2>{title}</h2>\n                      <p>{release}</p>\n                    </div>\n                  </Box>\n                </Link>\n              </li>\n            );\n          })}\n      </Box>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '48c8290358fa5316a044ddee2fc9cc6f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieById = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieCreditsById = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieReviewsById = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesByQuery,\n  fetchMovieById,\n  fetchMovieCreditsById,\n  fetchMovieReviewsById,\n};\n\nexport default api;\n"],"names":["Box","styled","typography","space","color","layout","flexbox","grid","useState","trendingList","setTrendingList","location","useLocation","useEffect","api","then","movies","as","display","flexDirection","gridGap","mt","map","id","title","poster_path","release_date","imgUrl","release","slice","to","state","from","src","alt","loading","width","API_KEY","axios","fetchTrendingMovies","response","data","results","console","error","fetchMoviesByQuery","query","fetchMovieById","message","fetchMovieCreditsById","fetchMovieReviewsById"],"sourceRoot":""}