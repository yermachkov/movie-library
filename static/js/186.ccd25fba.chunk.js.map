{"version":3,"file":"static/js/186.ccd25fba.chunk.js","mappings":"4KAkCA,UA9BgB,WACd,OAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAAA,sBACyBH,GACtBI,MAAK,SAAAC,GAAI,OAAIN,EAAgBM,EAAKC,QAAzB,GACb,GAAE,CAACN,KAGF,yBACGF,GAAgBA,EAAaS,QAC5B,wBACGT,EAAaU,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7B,OACE,2BACE,oCAAYD,GAAc,eAC1B,uBAAIC,MAFGF,EAKZ,OAGH,sEAIP,C,2EC9BKG,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,6GAERD,IAAAA,IAAA,sCAAyCD,IAFjC,cAEzBG,EAFyB,yBAGxBA,EAASV,KAAKC,SAHU,gCAK/BU,QAAQC,MAAR,MAL+B,yDAAH,qDASnBC,EAAkB,mCAAG,WAAMC,GAAN,gGAEPN,IAAAA,IAAA,gCACID,EADJ,kBACqBO,IAHd,cAExBJ,EAFwB,yBAKvBA,EAASV,KAAKC,SALS,gCAO9BU,QAAQC,MAAR,MAP8B,yDAAH,sDAWlBG,EAAc,mCAAG,WAAMX,GAAN,gGAEHI,IAAAA,IAAA,iBAAoBJ,EAApB,oBAAkCG,IAF/B,cAEpBG,EAFoB,yBAGnBA,EAASV,MAHU,gCAK1BW,QAAQC,MAAM,KAAMI,SALM,yDAAH,sDASdC,EAAqB,mCAAG,WAAMb,GAAN,gGAEVI,IAAAA,IAAA,iBAAoBJ,EAApB,4BAA0CG,IAFhC,cAE3BG,EAF2B,yBAG1BA,EAASV,MAHiB,gCAKjCW,QAAQC,MAAR,MALiC,yDAAH,sDASrBM,EAAqB,mCAAG,WAAMd,GAAN,gGAEVI,IAAAA,IAAA,iBAAoBJ,EAApB,4BAA0CG,IAFhC,cAE3BG,EAF2B,yBAG1BA,EAASV,MAHiB,gCAKjCW,QAAQC,MAAR,MALiC,yDAAH,sDAS5Bd,EAAM,CACVW,oBAAAA,EACAI,mBAAAA,EACAE,eAAAA,EACAE,sBAAAA,EACAC,sBAAAA,GAGF,M","sources":["components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/movies-api';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    api\n      .fetchMovieReviewsById(movieId)\n      .then(data => setMovieReviews(data.results));\n  }, [movieId]);\n\n  return (\n    <div>\n      {movieReviews && movieReviews.length ? (\n        <ul>\n          {movieReviews.map(({ id, name, content }) => {\n            return (\n              <li key={id}>\n                <p>Author: {name ? name : 'Anonymus'}</p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '48c8290358fa5316a044ddee2fc9cc6f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieById = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieCreditsById = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieReviewsById = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesByQuery,\n  fetchMovieById,\n  fetchMovieCreditsById,\n  fetchMovieReviewsById,\n};\n\nexport default api;\n"],"names":["useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","api","then","data","results","length","map","id","name","content","API_KEY","axios","fetchTrendingMovies","response","console","error","fetchMoviesByQuery","query","fetchMovieById","message","fetchMovieCreditsById","fetchMovieReviewsById"],"sourceRoot":""}